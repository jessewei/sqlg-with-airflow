
# -*- coding: utf-8 -*-
# Author        : Jesse Wei
# LastUpdate    : 2018/08/04
# Impact        : Jobs generated by SQLG
# Message       : Humanity towards others, we live by sharing. Fear can hold you prisoner, only hope can set you free.

# from __future__ import print_function
import logging
import airflow
from datetime import datetime, timedelta
from airflow.operators.sensors import ExternalTaskSensor
from airflow.operators.python_operator import PythonOperator
from airflow import models
from airflow.models import Variable

from acme.operators.dwh_operators import PostgresOperatorWithTemplatedParams


DB_NAME = 'DWH'

my_taskid = "O_CUSTOMER"
O_CUSTOMER = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(7),
    pool='postgres_dwh')


my_taskid = "O_ORDER_INFO"
O_ORDER_INFO = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(7),
    pool='postgres_dwh')


my_taskid = "O_ORDERLINE"
O_ORDERLINE = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(7),
    pool='postgres_dwh')


my_taskid = "O_PRODUCT"
O_PRODUCT = PostgresOperatorWithTemplatedParams(
    task_id=my_taskid,
    postgres_conn_id='postgres_dwh',
    sql=DB_NAME + '/' + my_taskid + '/' + my_taskid + '.sql',
    parameters={"window_start_date": "{{ ds }}", "window_end_date": "{{ tomorrow_ds }}"},
    start_date=airflow.utils.dates.days_ago(7),
    pool='postgres_dwh')



