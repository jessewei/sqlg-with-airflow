<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
<xsl:output method="text" />
<xsl:param name="delim" select="','" />
<xsl:param name="quote">"</xsl:param>
<xsl:param name="qt">></xsl:param>
   <xsl:variable name='nl'><xsl:text>&#xa;</xsl:text></xsl:variable>
   <xsl:output method="xml" omit-xml-declaration="yes" />
   <xsl:variable name="WS" select="PRJ_ID"/>
   <xsl:key name="Rows-by-JOB_FLOW_NAME" match="/Table/Row" use="JOB_FLOW_NAME" />
   <xsl:key name="Rows-by-JOB_FLOW_NAME-and-JOB_NAME" match="/Table/Row" use="concat(JOB_FLOW_NAME,JOB_NAME)" />   
<xsl:template match="/">
# -*- coding: utf-8 -*-
# Author        : Jesse Wei
# LastUpdate    : 2018/08/04
# Impact        : DAG generated by SQLG
# Message       : Humanity towards others, we live by sharing. Fear can hold you prisoner, only hope can set you free.

# from __future__ import print_function
import logging
import airflow
from datetime import datetime, timedelta
from airflow.operators.sensors import ExternalTaskSensor
from airflow.operators.python_operator import PythonOperator
from airflow import models
from airflow.models import Variable
import sqlg_jobs 

#from acme.operators.dwh_operators import PostgresOperatorWithTemplatedParams

def f_SYS_STS_STG():
    logging.info('Control flow: STAGE status ')

args = {
    'owner': 'airflow',
    'start_date': airflow.utils.dates.days_ago(7),
    'provide_context': True
}

tmpl_search_path = Variable.get("sql_path")

my_taskid = 'SYS_STS_STG'
D_STG_INIT = airflow.DAG(
    'D_STG_INIT',
    schedule_interval=timedelta(1),
    default_args=args,
    template_searchpath=tmpl_search_path,    
    max_active_runs=1)

SYS_STS_STG = PythonOperator(task_id=my_taskid,
                    python_callable=f_SYS_STS_STG,
                    provide_context=False,
                    dag=D_STG_INIT)

my_taskid = 'D_STG_INITxSYS_STS_STG'                    
D_STG_INITxSYS_STS_STG = ExternalTaskSensor(
    task_id=my_taskid,
    external_dag_id='D_STG_INIT',
    external_task_id='SYS_STS_STG',
    execution_delta=None,  # Same day as today
    )

# Flow dag    
DB_NAME = 'DWH'    
<xsl:for-each select="Table/Row[not(JOB_FLOW_NAME = preceding-sibling::Row/JOB_FLOW_NAME)]">

<xsl:variable name="WS" select="PRJ_ID"/>
<xsl:value-of select="concat(JOB_FLOW_NAME, ' = airflow.DAG(')"/>
<xsl:value-of select="concat('    ',$quote, JOB_FLOW_NAME, $quote, ',')"/>
<xsl:text>
    schedule_interval="@daily",
    dagrun_timeout=timedelta(minutes=60),
    template_searchpath=tmpl_search_path,
    default_args=args,
    start_date=airflow.utils.dates.days_ago(7),    
    max_active_runs=1)

</xsl:text>
<xsl:for-each select="key('Rows-by-JOB_FLOW_NAME',current()/JOB_FLOW_NAME)[not(JOB_NAME = preceding-sibling::Row/JOB_NAME)]">
<xsl:value-of select="concat('sqlg_jobs.', JOB_NAME, '.dag=', JOB_FLOW_NAME)"/>
<xsl:text>&#xa;</xsl:text>    

<xsl:for-each select="key('Rows-by-JOB_FLOW_NAME-and-JOB_NAME',concat(current()/JOB_FLOW_NAME,current()/JOB_NAME))">
<xsl:choose>
    <xsl:when  test="CMD='WATCH'">
        <xsl:value-of select="concat('  OPENS ', $WS, '#', PRCS_INFO)"/> 
        <xsl:text>&#xa;</xsl:text>    
    </xsl:when>
</xsl:choose>        
<xsl:choose>
    <xsl:when  test="PRE_JOB_FLOW_NAME=JOB_FLOW_NAME">
<xsl:value-of select="concat(PRE_JOB_NAME, '.set_downstream(', JOB_NAME, ')')"/>   
    </xsl:when>
    <xsl:otherwise>  
<xsl:value-of select="concat(PRE_JOB_FLOW_NAME, 'x', PRE_JOB_NAME,  '.dag=', JOB_FLOW_NAME, $nl)"/>    
<xsl:value-of select="concat(PRE_JOB_FLOW_NAME, 'x', PRE_JOB_NAME, '.set_downstream(', 'sqlg_jobs.', JOB_NAME, ')')"/>   
    </xsl:otherwise>
</xsl:choose>
</xsl:for-each>
<xsl:text>&#xa;</xsl:text> 
</xsl:for-each>
</xsl:for-each>


</xsl:template>
</xsl:stylesheet>
